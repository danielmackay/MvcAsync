@using MvcAsync.Models
@model RolesViewModel
@{
    ViewBag.Title = "Knockout AJAX";
}

<h2>Knockout AJAX</h2>
<table class="table table-striped table-hover" data-bind="visible: people().length > 0">
    <thead>
        <tr>
            <th>First</th>
            <th>Last</th>
            <th>Role</th>
        </tr>
    </thead>
    <tbody data-bind="foreach: people">
        <tr>
            <td data-bind="text: firstName"></td>
            <td data-bind="text: lastName"></td>
            <td data-bind="text: role"></td>
        </tr>
    </tbody>
</table>

<div>
    <p>@Model.RolesJson</p>
    <select id="selectedRole" name="selectedRole" data-bind="options: roles, value: selectedRole"></select>
    <button id="ajaxbutton" class="btn btn-primary" data-bind="click: submit">Submit</button>
</div>

<div>
    <ul data-bind="foreach: roles">
        <li><a href="#" data-bind="text: $data, click: $root.filter"></a></li>
    </ul>
</div>

@section Scripts
{
    <script src="~/Scripts/knockout-2.3.0.debug.js"></script>
    <script type="text/javascript">
        function Person(data) {
            this.firstName = ko.observable(data.FirstName);
            this.lastName = ko.observable(data.LastName);
            this.role = ko.observable(data.Role);
        }

        function PeopleViewModel() {
            // Data
            var self = this;
            self.people = ko.observableArray([]);
            self.roles = ko.observable(JSON.parse('@Html.Raw(Model.RolesJson)'));
            self.selectedRole = ko.observable(self.roles()[0]);
            self.dataUrl = '@Model.JsonDataUrl';

            // Operations
            self.submit = function () {
                self.update(self.GetUrl(self.selectedRole()));
            };

            self.filter = function (data, event) {
                self.update(self.GetUrl(event.target.text));
            }

            self.update = function (url) {
                $.getJSON(url, function (allData) {
                    var mappedPeople = $.map(allData, function (item) { return new Person(item) });
                    self.people(mappedPeople);
                });
            };

            self.GetUrl = function (selectedRole) {
                return self.dataUrl + '?selectedRole=' + selectedRole;
            }

            self.init = function () {
                self.submit();
            }

            self.init();
        }

        ko.applyBindings(new PeopleViewModel());
    </script>
}
